#!/usr/bin/env python

"""
Created on Sun. Mar. 12 2021 @NYU-SH
Updated on Tue. Nov. 05 2021 @NYU-SH

@author: Zhubin Hu
"""
import pandas as pd
import argparse
import os

parser = argparse.ArgumentParser(description='Get average result of .csv files generated by multi QCDyn jobs which are submitted by qcdyn_submit.py')
parser.add_argument('jobs_dir',nargs='*',help='specify the name of directory containing multi jobs results')
#parser.add_argument('-s', '--suffix',help='specify the suffix to be added the averaged result file, default is None',type=str,default=None)
args = parser.parse_args()

for i in range(len(args.jobs_dir)):
    jobs = os.listdir(args.jobs_dir[i]) # directory of each job
    num_jobs = len(jobs)
    files = [] # store the filenames .csv files (usually, they are reduced density matrix file)
    for j in os.listdir(args.jobs_dir[i] + '/' + jobs[0]):
        if (j[-4:] == '.csv'):
            files.append(j)
    rdms = [] # store the dataframe from .csv files
    for k in range(len(files)):
        rdms.append(pd.read_csv(args.jobs_dir[i] + '/' + jobs[0] + '/' + files[k], sep=','))
    for j in range(1, num_jobs): # start from index 1, since 0 has been stored to rdms
        for k in range(len(files)):
            filename = args.jobs_dir[i] + '/' + jobs[j] + '/' + files[k]
            df = pd.read_csv(filename, sep=',')
            rdms[k] += df
    for k in range(len(files)):
        rdms[k] /= num_jobs # get average rdm
        rdms[k].to_csv(files[k], index=False) # save the averaged rdm to current dir